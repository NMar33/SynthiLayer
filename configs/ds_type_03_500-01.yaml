#######################################
# Note:
# In the subdataset configuration files:
# - configs\ds_type_01_500-01.yaml
# - configs\ds_type_02_500-01.yaml
# - configs\ds_type_03_500-01.yaml
# The `noise_pipeline` parameter is consistent across all, 
# meaning the elements to be removed during the segmentation process 
# will be the same in images generated by these subdatasets.
#
# However, the `mask_pipeline` parameter varies among these subdatasets, 
# leading to different target elements in each.
#
# Additional information about the differences in target elements 
# is provided in the README.md file.
#######################################

# Dimensions of the generated image
img_size: [500, 500]
img_name_prefix: "type_03_500"

# The `noise_pipeline` parameter defines the steps for generating
# image elements that should be removed during the segmentation process.
noise_pipeline: [
  # Adding gradients
  ["add_grad", {prob: 0.1, min_c: 0.01, max_c: 0.1, direction: "horizontal"}],
  ["add_grad", {prob: 0.1, min_c: 0.01, max_c: 0.1, direction: "vertical"}],
  
  ["add_grad", {prob: 0.5, min_c: 0.01, max_c: 0.2, direction: "horizontal"}],
  ["add_grad", {prob: 0.5, min_c: 0.01, max_c: 0.2, direction: "vertical"}],
  
  ["add_grad", {prob: 0.1, min_c: 0.01, max_c: 0.1, direction: "diagonal"}],
  ["add_grad", {prob: 0.2, min_c: 0.01, max_c: 0.1, direction: "diagonal"}],
  ["add_grad", {prob: 0.5, min_c: 0.01, max_c: 0.2, direction: "diagonal"}],

  # Adding Gaussian noise
  ["add_noise", {prob: 0.5, min_c: 0.01, max_c: 0.1}],

  # Adding a thick line with a thickness range of [50, 150] to simulate color shifts 
  # that are unrelated to the lines we aim to segment.
  # This line can be positioned anywhere from 0 to 500 pixels 
  # from the top border of the image, as specified by the range in `dist_between_min_max: [0, 500]`.
  # There's a 50% probability that this line will be drawn, 
  # since the number of lines drawn is randomly selected from the set {0, 1} (`num_lines_min_max: [0, 1]`).
  ["add_rand_lines", {
    num_lines_min_max: [0, 1],
    thickness_min_max: [50, 150],
    dist_between_min_max: [0, 500],
    p_rupture_min_max: [0.005, 0.015],
    p_continuation_min_max: [0.4, 0.6],
    p_deflection_min_max: [0.01, 0.5], 
    p_momentum_min_max: [0.59, 0.99],
    pattern_shift_per_row_min_max: [0.01, 0.2],
    p_pattern_min_max: [0.75, 0.85],
    color_min_max: [0.01, 0.1]
  }],

  # Parameters are similar to the previous thick line (`thickness_min_max: [50, 150]`) 
  # that simulates color shifts unrelated to the lines we aim to segment.
  # We add this line as a separate step to ensure
  # these lines are generated independently and do not replicate each other's shape.
  ["add_rand_lines", {
    num_lines_min_max: [0, 1],
    thickness_min_max: [50, 150],
    dist_between_min_max: [0, 500],
    p_rupture_min_max: [0.005, 0.015],
    p_continuation_min_max: [0.4, 0.6],
    p_deflection_min_max: [0.01, 0.5], 
    p_momentum_min_max: [0.59, 0.99],
    pattern_shift_per_row_min_max: [0.01, 0.2],
    p_pattern_min_max: [0.75, 0.85],
    color_min_max: [0.01, 0.1]
  }],

  # Same parameters as above.
  ["add_rand_lines", {
    num_lines_min_max: [0, 1],
    thickness_min_max: [50, 150],
    dist_between_min_max: [0, 500],
    p_rupture_min_max: [0.005, 0.015],
    p_continuation_min_max: [0.4, 0.6],
    p_deflection_min_max: [0.01, 0.5], 
    p_momentum_min_max: [0.59, 0.99],
    pattern_shift_per_row_min_max: [0.01, 0.2],
    p_pattern_min_max: [0.75, 0.85],
    color_min_max: [0.01, 0.1]
  }],

  # Same parameters as above.
  ["add_rand_lines", {
    num_lines_min_max: [0, 1],
    thickness_min_max: [50, 150],
    dist_between_min_max: [0, 500],
    p_rupture_min_max: [0.005, 0.015],
    p_continuation_min_max: [0.4, 0.6],
    p_deflection_min_max: [0.01, 0.5], 
    p_momentum_min_max: [0.59, 0.99],
    pattern_shift_per_row_min_max: [0.01, 0.2],
    p_pattern_min_max: [0.75, 0.85],
    color_min_max: [0.01, 0.1]
  }],

  # Same parameters as above.
  # In the end, up to 5 noise lines will be added.
  ["add_rand_lines", {
    num_lines_min_max: [0, 1],
    thickness_min_max: [50, 150],
    dist_between_min_max: [0, 500],
    p_rupture_min_max: [0.005, 0.015],
    p_continuation_min_max: [0.4, 0.6],
    p_deflection_min_max: [0.01, 0.5], 
    p_momentum_min_max: [0.59, 0.99],
    pattern_shift_per_row_min_max: [0.01, 0.2],
    p_pattern_min_max: [0.75, 0.85],
    color_min_max: [0.01, 0.1]
  }],

  # This step randomly rotates the generated noise image. 
  # The maximum rotation angle can be 180 degrees. 
  # The 'scale' parameter ensures the image is enlarged 
  # during rotation. If set to True, the image is scaled 
  # to avoid empty areas after rotation.
  ["img_rotation", {
    prob: 0.5, 
    min_angle: 0, 
    max_angle: 180, 
    scale: True}]
]

# The 'mask_pipeline' parameter defines the steps to generate 
# image elements that are the target during the segmentation process. 
# This parameter influences both the generation of the image 
# and its corresponding mask.
mask_pipeline: [
  # Add between 70 to 100 random lines.
  ["add_rand_lines", {
    num_lines_min_max: [70, 100],
    thickness_min_max: [4, 10],
    dist_between_min_max: [8, 12],
    p_deflection_min_max: [0.2, 0.6], 
    p_momentum_min_max: [0.9, 1.0],
    pattern_shift_per_row_min_max: [0.0, 0.2],
    p_pattern_min_max: [0.6, 1.0],
    p_rupture_min_max: [0.0, 0.02],
    p_continuation_min_max: [0.0, 0.02],
    color_min_max: [0.05, 0.4]
  }],

  # Rotation of the final image
  # This step is unnecessary if training augmentation with rotations is used.
  ["img_rotation", {
    prob: 0.15, 
    min_angle: 0, 
    max_angle: 30, 
    scale: True}]
]
